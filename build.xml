<project xmlns:ivy="antlib:org.apache.ivy.ant" name="fbapi4j" default="default">

	<property name="version" value="1.0" />

	<property name="src.dir" location="${basedir}/src" />
	<property name="test.src.dir" location="${basedir}/test" />
	<property name="demo.src.dir" location="${basedir}/demo" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="build.dir" location="${basedir}/bin" />
	<property name="classes.dir" location="${build.dir}/classes" />
	<property name="test.classes.dir" location="${build.dir}/test-classes" />
	<property name="demo.classes.dir" location="${build.dir}/demo-classes" />
	<property name="reports.dir" location="${build.dir}/reports" />
	<property name="test.reports.dir" location="${reports.dir}/tests" />
	<property name="dist.dir" location="${basedir}/dist" />

	<ivy:settings file="ivysettings.xml" />

	<ivy:cachepath pathid="classpath-ivy-compile" conf="compile" log="quiet" />
	<ivy:cachepath pathid="classpath-ivy-runtime" conf="runtime" log="quiet" />
	<ivy:cachepath pathid="classpath-ivy-test" conf="test" log="quiet" />

	<path id="classpath-runtime">
		<pathelement path="${classes.dir}" />
		<path refid="classpath-ivy-runtime" />
	</path>

	<path id="classpath-compile">
		<path refid="classpath-runtime" />
		<path refid="classpath-ivy-compile" />
	</path>

	<path id="classpath-test">
		<pathelement path="${test.classes.dir}" />
		<path refid="classpath-compile" />
		<path refid="classpath-ivy-test" />
	</path>

	<path id="classpath-demo">
		<pathelement path="${demo.classes.dir}" />
		<path refid="classpath-runtime" />
	</path>

	<!-- ================================= 
          target: default       
         ================================= -->
	<target name="default" depends="clean, init, build, test, dist" description="A complete build, minus the tests." />

	<!-- ================================= 
          target: init              
         ================================= -->
	<target name="init" depends="init-src, init-test, init-demo, init-report" description="Build the empty directories for building the project" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: init-src
         - - - - - - - - - - - - - - - - - -->
	<target name="init-src" description="Build the empty directories for compiling the source of the project">
		<mkdir dir="${src.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: init-test
         - - - - - - - - - - - - - - - - - -->
	<target name="init-test" description="Build the empty directories for testing the project">
		<mkdir dir="${test.src.dir}" />
		<mkdir dir="${test.classes.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: init-demo
         - - - - - - - - - - - - - - - - - -->
	<target name="init-demo" description="Build the empty directories for executing the demos">
		<mkdir dir="${demo.src.dir}" />
		<mkdir dir="${demo.classes.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
	      target: init-report                      
	     - - - - - - - - - - - - - - - - - -->
	<target name="init-report" description="Build the empty directories for reporting on the project">
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${test.reports.dir}" />
	</target>

	<!-- ================================= 
          target: build
         ================================= -->
	<target name="build" depends="init, compile, copy-resources" description="Compile source and tests, copy raw data from source folders to build folders" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile
         - - - - - - - - - - - - - - - - - -->
	<target name="compile" depends="fetch-dependencies, compile-src, compile-test, compile-demo" description="Compile the java and test source" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: fetch-dependencies
         - - - - - - - - - - - - - - - - - -->
	<target name="fetch-dependencies">
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" type="jar" conf="compile" />
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" type="jar, bundle" conf="runtime" />
		<ivy:retrieve pattern="${lib.dir}/[artifact]-[revision].[ext]" type="jar" conf="test" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile-src
         - - - - - - - - - - - - - - - - - -->
	<target name="compile-src" depends="init" description="Compile the java source">
		<javac destdir="${classes.dir}" target="1.5" debug="true">
			<src path="${src.dir}" />
			<classpath refid="classpath-compile" />
		</javac>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile-test
         - - - - - - - - - - - - - - - - - -->
	<target name="compile-test" depends="compile-src" description="Compile the test source">
		<javac destdir="${test.classes.dir}" target="1.5" debug="true">
			<src path="${test.src.dir}" />
			<classpath refid="classpath-test" />
		</javac>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: compile-demo
         - - - - - - - - - - - - - - - - - -->
	<target name="compile-demo" depends="compile-src" description="Compile the demo source">
		<javac destdir="${demo.classes.dir}" target="1.5" debug="true">
			<src path="${demo.src.dir}" />
			<classpath refid="classpath-demo" />
		</javac>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy-resources
         - - - - - - - - - - - - - - - - - -->
	<target name="copy-resources" depends="copy-resources-src, copy-resources-test, copy-resources-demo" description="Copy resources from the source to the build folders" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy-resources-src
         - - - - - - - - - - - - - - - - - -->
	<target name="copy-resources-src" depends="compile-src" description="Copy source resources">
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy-resources-test
         - - - - - - - - - - - - - - - - - -->
	<target name="copy-resources-test" depends="compile-test" description="Copy test resources">
		<copy todir="${test.classes.dir}">
			<fileset dir="${test.src.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: copy-resources-demo
         - - - - - - - - - - - - - - - - - -->
	<target name="copy-resources-demo" depends="compile-demo" description="Copy demo resources">
		<copy todir="${demo.classes.dir}">
			<fileset dir="${demo.src.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<!-- ================================= 
          target: test
         ================================= -->
	<target name="test" depends="build, junit" description="Run all automated tests" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: junit                    
         - - - - - - - - - - - - - - - - - -->
	<target name="junit" depends="build" description="Run the junit automated tests">
		<junit fork="true">
			<classpath refid="classpath-test" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${test.reports.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/*Test*.java" />
					<exclude name="**/*Suite.java" />
				</fileset>
			</batchtest>
		</junit>

		<delete dir="${instrumented.classes.dir}" />
	</target>

	<!-- ================================= 
          target: demo
         ================================= -->
	<target name="demo" depends="build, run-demos" description="Run all the demo code" />


	<!-- ================================= 
          target: run-demos
         ================================= -->
	<target name="run-demos" depends="build">
		<java >
			
		</java>
	</target>

	<!-- ================================= 
          target: report
         ================================= -->
	<target name="report" depends="test" description="Run the source code reports" />

	<!-- ================================= 
      target: dist
     ================================= -->
	<target name="dist" depends="compile, dist-jar" description="Build the final distributable" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: dist-jar
         - - - - - - - - - - - - - - - - - -->
	<target name="dist-jar" depends="build" description="Build a distributable jar file">
		<taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/jarjar-1.0.jar" />

		<jarjar jarfile="${dist.dir}/${ant.project.name}.jar">
			<fileset dir="${classes.dir}" />
			<zipfileset src="${lib.dir}/mime-util-2.1.jar" />
			<zipfileset src="${lib.dir}/slf4j-api-1.5.10.jar" />
			<zipfileset src="${lib.dir}/slf4j-nop-1.5.10.jar" />
			<rule pattern="org.slf4j.**" result="com.fieldexpert.fbapi4j.slf4j.@1" />
			<rule pattern="eu.medsea.**" result="com.fieldexpert.fbapi4j.@1" />
		</jarjar>
	</target>

	<!-- ================================= 
          target: clean
         ================================= -->
	<target name="clean" depends="clean-build, clean-lib, clean-dist" description="Clean up all build-generated artefacts" />

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean-build
         - - - - - - - - - - - - - - - - - -->
	<target name="clean-build" description="Clean up the build directory">
		<delete dir="${build.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean-lib
         - - - - - - - - - - - - - - - - - -->
	<target name="clean-lib" description="Clean up the lib directory">
		<delete dir="${lib.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean-dist
         - - - - - - - - - - - - - - - - - -->
	<target name="clean-dist" description="Clean up the dist directory">
		<delete dir="${dist.dir}" />
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean-cache
         - - - - - - - - - - - - - - - - - -->
	<target name="clean-cache" description="Clean up the ivy cache directory">
		<ivy:cleancache />
	</target>

</project>
